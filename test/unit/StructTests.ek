import <io>
import <test>

// Definition of a structure. Should be stored in the scope so we can lookup for
// this type of struct.
struct SomeStruct
{
    int i;
    float f;
    string s;
};

struct SomeStruct emptyStruct;
print(emptyStruct, emptyStruct.i, emptyStruct.f, emptyStruct.s);

// Accessing values.
int i = emptyStruct.i;
i = 2;
print(i, emptyStruct.i);

// TODO: - modify values. Becasue values are stored in the struct instance, we
// need some way to modify them.
emptyStruct.i = 1;

// TODO: - After getting this working properly, next step will be to implement classes 
// which we will derive from Structs. Will be pretty much the same. Also need to
// have a mapping for storing function objects which will be called in the same 
// way as above and have access to all objects we have created in this Struct. 
// Interestingly, we could also create a Scope object which lives inside Struct 
// and handles memory and ownership. This would make sense and we would not need 
// an explicit map inside!! 